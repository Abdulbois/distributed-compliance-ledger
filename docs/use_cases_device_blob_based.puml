@startuml
!pragma teoz true
hide footbox

actor Vendor as V
actor "ZigBee Certification" as ZB
actor User as U
entity Device as D
database Ledger as L

note over L
Setup PKI (see XXX):
- Root Certificate `RootCert`
- Vendor Certificate `VendorCert(vid. pid)`
- ZigBee Certification Certificate `ZBTestHouseCert`
end note

== 1. Setup Model Info ==
V -> L: Save `ModelInfo(vid, pid)`

== 2. Issue Device ==
D -> D: generate `privKey` and `pubKey`
D -> D: X509 Device Cert `DeviceCert(vid,pid)`\nwith `pubKey`, `vid`, `pid`
V -> D: Sign `DeviceCert` by `VendorCert(vid,pid)`
ZB -> V: Attest certification of `vid` and `pid` (Cert Blob)\nsigned by `ZBTestHouseCert`
V -> D: store Cert Blob on device

== 4.2. Revoke Device Compliance ==
ZB -> L: Revoke certification of `vid` and `pid`

== 5. Use Device ==
U <- D: Get `DeviceCert(vid, pid)`
U <-> D: Verify proof of privKey possession
U <-- L: Get `VendorCert(vid. pid)`\n(update cache if needed)
U <-- L: Get `RootCert`\n(update cache if needed)
U -> U: Verify `DeviceCert(vid, pid)` signature
U -> U: Verify that `DeviceCert`'s `pid` and `vid`\nequals to `VendorCert`'s `pid` and `vid`
U <- D: Get Cert Blob
U <-- L: Get `ZBTestHouseCert`\n(update cache if needed)
U -> U: Verify Cert Blob signature
U -> U: Verify that Cert Blob's `pid` and `vid`\nequals to `DeviceCert`'s `pid` and `vid`
U <-- L: Get revoked devices\n(update cache if needed)
U -> U: Verify that Cert Blob is not revoked
U -> D: Start using Device



@enduml