syntax = "proto3";
package zigbeealliance.distributedcomplianceledger.dclupgrade;

import "gogoproto/gogo.proto";
import "cosmos_proto/cosmos.proto";
import "cosmos/upgrade/v1beta1/upgrade.proto";
// this line is used by starport scaffolding # proto/tx/import

option go_package = "github.com/zigbee-alliance/distributed-compliance-ledger/x/dclupgrade/types";

// Msg defines the Msg service.
service Msg {
      rpc ProposeUpgrade(MsgProposeUpgrade) returns (MsgProposeUpgradeResponse);
  rpc ApproveUpgrade(MsgApproveUpgrade) returns (MsgApproveUpgradeResponse);
// this line is used by starport scaffolding # proto/tx/rpc
}

message MsgProposeUpgrade {
  string creator = 1 [(cosmos_proto.scalar) = "cosmos.AddressString", (gogoproto.moretags) = "validate:\"required\""];
  cosmos.upgrade.v1beta1.Plan plan = 2 [(gogoproto.nullable) = false];
}

message MsgProposeUpgradeResponse {
}

message MsgApproveUpgrade {
  string creator = 1;
  string name = 2;
}

message MsgApproveUpgradeResponse {
}

// this line is used by starport scaffolding # proto/tx/message