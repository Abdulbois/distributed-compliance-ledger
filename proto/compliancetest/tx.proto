syntax = "proto3";
package zigbeealliance.distributedcomplianceledger.compliancetest;

// this line is used by starport scaffolding # proto/tx/import

import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";

option go_package = "github.com/zigbee-alliance/distributed-compliance-ledger/x/compliancetest/types";

// Msg defines the Msg service.
service Msg {
      rpc AddTestingResult(MsgAddTestingResult) returns (MsgAddTestingResultResponse);
// this line is used by starport scaffolding # proto/tx/rpc
}

message MsgAddTestingResult {
  string signer = 1 [(cosmos_proto.scalar) = "cosmos.AddressString", (gogoproto.moretags) = "validate:\"required\""];
  int32 vid = 2 [(gogoproto.moretags) = "validate:\"gte=1,lte=65535\""];
  int32 pid = 3 [(gogoproto.moretags) = "validate:\"gte=1,lte=65535\""];
  uint32 software_version = 4;
  string software_version_string = 5 [(gogoproto.moretags) = "validate:\"required,max=64\""];
  string test_result = 6 [(gogoproto.moretags) = "validate:\"required,max=10485760\""];
  string test_date = 7 [(gogoproto.moretags) = "validate:\"required\""];
}

message MsgAddTestingResultResponse {
}

// this line is used by starport scaffolding # proto/tx/message